ggplot(data=prb, mapping= aes(x=TFR, y=PercPopLT15))+
geom_point()+
geom_smooth( method = "loess")+
ggtitle(label = "Relationship between Total Fertility and Percent under age 15", subtitle = "2008 Estimates- loess fit")+
xlab(label = "Percent under age 15")+
ylab(label="IMR")
# Project name:   KL2 project (short course)
############################################################################
# Written by:     Susanne Schmidt
# Written on:     07/06/2016
# Modified on:
# Description:    Program to write an random intercept model using INLA
# Input files:
# Output files:
############################################################################
#libraries
library(INLA)
library(car)
library(rgeos)
install.packages("rgeos")
install.packages("gpclib")
library(rgeos)
library(gpclib)
library(maptools)
library(spdep)
install.packages("ctv")
library(ctv)
install.views(c("Spatial", "SocialSciences", "Bayesian", "ReproducibleResearch"))
library(gpclib)
library(maptools)
library(spdep)
gpclibPermit()
#load data
load("~/Google Drive/cancerwork/susanne/susanne_62616.Rdata")
names(breast_cancer)
#reduce dataset
breast<-subset(breast_cancer, age>=18)
head(breast)
#recode some variables
#timeperiod
breast$timeperiod<- recode(breast$year, recodes="1995:1999=1; 2000:2002=2;2003=3;2004:2014=4")
#agegroups
breast$agegr<- recode(breast$age, recodes="18:44=1;45:64=2; 65:79=3; 80:113=4")
#insurance
breast$insurance<- recode(breast$pripayerdx, recodes="'01'=1; '02'=1; 20:21=2; 31:35=3; 60:64=4; 10=5; 65:68=6; else=7")
#urban-rural
breast$rural_urban<- recode(breast$ruralurbancon1993, recodes="0:3=1; 4:9=2; else=3")
#late stage diagnosis
breast$late_stage<- recode(breast$derivedss2000, recodes="7=1; else=0")
###make dummies out of everything
breast$rural<- recode(breast$rural_urban, recodes = "1=1; else=0")
breast$rural_unk<- recode(breast$rural_urban, recodes = "3=1; else=0")
breast$age1844<- recode(breast$agegr, recodes = "1=1; else=0")
breast$age6579<- recode(breast$agegr, recodes = "3=1; else=0")
breast$age80pl<- recode(breast$agegr, recodes = "4=1; else=0")
breast$tp9599<- recode(breast$timeperiod, recodes = "1=1; else=0")
breast$tp2003<- recode(breast$timeperiod, recodes = "3=1; else=0")
breast$tp0414<- recode(breast$timeperiod, recodes = "4=1; else=0")
breast$noins<- recode(breast$insurance, recodes = "1=1; else=0")
breast$medicaid<- recode(breast$insurance, recodes = "3=1; else=0")
breast$ins_noi<- recode(breast$insurance, recodes = "5=1; else=0")
breast$otherins<- recode(breast$insurance, recodes = "6=1; else=0")
breast$ins_unk<- recode(breast$insurance, recodes = "7=1; else=0")
breast$medicare<- recode(breast$insurance, recodes = "4=1; else=0")
breast$black<- recode(breast$raced, recodes = "'Black'=1; else=0")
breast$other_race<- recode(breast$raced, recodes = "'Other'=1; else=0")
require(lme4)
install.packages("lme4")
update.packages(ask=F)
require(lme4)
summary(glmer(I(derivedss2000>4)~(black+other_race+hisp)*I(pripayerdx <=2)+factor(agegr)+rural+(1|year)+(1|cofips), family=binomial, data=breast))
####reading in the US shapefile and limiting it to the texas counties represented in the texas cancer registry data
us_counties<- readShapePoly("M:/Projects/KL2/Spatial Short Course/Data and code/tl_2009_us_county/tl_2009_us_county.shp")
library(broom)
library(readr)
library(dplyr)
library(ggplot2)
prb<-read_csv(file = "https://raw.githubusercontent.com/coreysparks/data/master/PRB2008_All.csv", col_types = read_rds(url("https://raw.githubusercontent.com/coreysparks/r_courses/master/prbspec.rds")))
names(prb)<-tolower(names(prb))
fit<-lm(tfr~e0total, data=prb)
coef(fit)
ggplot(prb, aes(x=e0total, y=tfr))+geom_point()+geom_smooth(method = "lm", se = FALSE)
summary(fit)
confint(fit)
sums<-summary(fit)
plot(fit, which=1)
library(lmtest)
bptest(fit)
plot(fit, which=2)
shapiro.test(resid(fit))
ks.test(resid(fit), y = pnorm)
#risk index= .60*pminority+ .63*poverty + .47*pfemhh
library(dplyr)
library(haven)
ipums<-read_dta("~/Documents/GitHub/data/usa_00045.dta")
means<-ipums%>%
filter(statefip==48, met2013!=0)%>%
mutate(pov=ifelse(poverty<=100, 1,0),
minority =ifelse(hispan==0 & race==1, 0, 1),
femhh = ifelse(relate==1& sex==2, 1, 0))%>%
group_by(met2013)%>%
summarise(meanpov=mean(pov), meanmin=mean(minority), meanfem=mean(femhh))
View(means)
means$index<-.63*means$meanpov+.6*means$meanmin+.47*means$meanfem
View(means)
??multiplot
library(NetworkChange)
install.packages("quantreg")
library(NetworkChange)
p1<-ggplot(prb, aes(x=e0total, y=tfr))+geom_point()
p2<-ggplot(prb, aes(e0total))+geom_histogram()
p3<-ggplot(prb, aes(tfr))+geom_histogram()
pl<-list(p1, p2, p3)
multiplot(pl)
multiplot(plotlist=pl)
multiplot(plotlist=pl, cols=2)
library(readr)
prb<-read_csv(file = "https://raw.githubusercontent.com/coreysparks/data/master/PRB2008_All.csv", col_types = read_rds(url("https://raw.githubusercontent.com/coreysparks/r_courses/master/prbspec.rds")))
names(prb)<-tolower(names(prb))
fit<-lm(imr~tfr+percurban+percpoplt15+percmarwomcontraall, prb)
library(broom)
library(pander)
pander(broom::tidy(summary(fit)))
getwd()
#addition and subtraction
3+7
3-7
#multiplication and division
3*7
3/7
#powers
3^2
3^3
#sommon math functions
log(3/7)
exp(3/7)
sin(3/7)
#custom functions
myfun<-function(x){
sqrt(x)^x
}
myfun(5)
x<-3
y<-7
x+y
x*y
log(x*y)
x<-c(3, 4, 5, 6, 7)
#c() makes a vector
y<-7
x*y
x[3]
#or if I want to test if this element is 10
x[3]==10
x[3]!=10
#of is it larger than another number:
x[3]>3
#or is any element of the whole vector greater than 3
x>3
str(x)
#how long is x?
length(x)
#is x numeric?
is.numeric(x)
#is x full of characters?
is.character(x)
#is any element of x missing?
is.na(x)
xc<-c("1","2")
#now i'll modify x
x<-c(x, NA) #combine x and a missing value ==NA
x
#Now ask if any x's are missing
is.na(x)
x<-ifelse(test = is.na(x)==T, yes =  sqrt(7.2), no =  x)
x
mydat<-data.frame(
x=c(1,2,3,4,5),
y=c(10, 20, 35, 57, 37),
group=c("A", "A" ,"A", "B", "B")
)
#See the size of the dataframe
dim(mydat)
length(mydat$x)
#Open the dataframe in a viewer and just print it
View(mydat)
print(mydat)
library(readr)
prb<-read_csv(file = "https://raw.githubusercontent.com/coreysparks/data/master/PRB2008_All.csv")
#names(prb) #print the column names
#View(prb) #open it in a viewer
prb<-read_csv("C:/Users/ozd504/Documents/GitHub/r_courses/PRB2008_All.csv")
library(haven)
prb_stata<-read_dta("C:/Users/ozd504/Documents/GitHub/r_courses/prb2008.dta")
prb_spss<-read_sav("C:/Users/ozd504/Documents/GitHub/r_courses/prb_2008.sav")
save(prb, file="C:/Users/ozd504/Documents/GitHub/r_courses/prb_2008_saved.Rdata")
load("C:/Users/ozd504/Documents/GitHub/r_courses/prb_2008.Rdata")
#Frequency Table of # of Contries by Continent
table(prb$Continent)
#basic summary statistics for the fertility rate
summary(prb$TFR)
mean(prb$TFR)
mean(prb$TFR, na.rm = T)
?fivenum
fivenum(prb$TFR)
summary(prb$TFR)
var(x)
sd(x)
sqrt(var(x))#same as using sd()
load(file=url("https://github.com/coreysparks/r_courses/blob/master/census_data.Rdata?raw=true"))
#from disk
#load("C:/Users/ozd504/Documents/census_data.Rdata")
#print the column names
names(census)
library(dplyr)
census%>%
filter(age>18, statefip==48, labforce==2)%>%
mutate(newwage= ifelse(incwage%in%c(999998,999999), NA, incwage),
newsex=ifelse(sex==1, "male", "female" ))%>%
group_by(newsex)%>%
summarise(med_income= median(newwage, na.rm=T))
library(dplyr)
census%>%
filter(age>18)%>%
filter(statefip==48)%>%
filter(labforce==2)%>%
mutate(newwage= ifelse(incwage%in%c(999998,999999), NA, incwage))%>%
mutate(newsex=ifelse(sex==1, "male", "female" ))%>%
group_by(newsex)%>%
summarise(med_income= median(newwage, na.rm=T))
census%>%
filter(labforce==2, met2013%in%c(41700, 19100), age>18) %>%
mutate(newwage= ifelse(incwage%in%c(999998,999999), NA, incwage),
sexrecode=ifelse(sex==1, "male", "female"),
city=ifelse(met2013==41700, "San Antonio", "Dallas")) %>%
group_by(sexrecode, city)%>%
summarise(med_income=median(newwage, na.rm=T), n=n())
library(ggplot2)
ggplot(data=prb, mapping=aes(TFR))+
geom_histogram( bins=10)+
ggtitle(label = "Distribution of the Total Fertility Rate ", subtitle = "2008 Estimates")+
xlab(label = "TFR")+
ylab(label="Frequency")
ggplot(data=prb,mapping = aes(TFR, colour=Continent))+
geom_freqpoly( bins=10)+
ggtitle(label = "Distribution of the Total Fertility Rate by Continent", subtitle = "2008 Estimates")+
xlab(label = "TFR")+
ylab(label="Frequency")
ggplot(data=prb,mapping = aes(TFR, colour=Continent, ..density..))+
geom_freqpoly( bins=10)+
ggtitle(label = "Distribution of the Total Fertility Rate by Continent", subtitle = "2008 Estimates")+
xlab(label = "TFR")+
ylab(label="Frequency")
ggplot(prb, mapping = aes(x= Continent, y =TFR))+
geom_boxplot()+
ggtitle(label = "Distribution of the Total Fertility Rate by Continent", subtitle = "2008 Estimates")
ggplot(prb, mapping = aes(x= Continent, y =TFR))+
geom_boxplot()+
ggtitle(label = "Distribution of the Total Fertility Rate by Continent", subtitle = "2008 Estimates")+coord_flip()
prb%>%
mutate(newname = paste(Continent, Region, sep="-"))%>%
ggplot(aes(x= newname, y =TFR,fill=Continent))+
geom_boxplot()+coord_flip()+
ggtitle(label = "Distribution of the Total Fertility Rate by Continent", subtitle = "2008 Estimates")
ggplot(data=prb,mapping= aes(x=TFR, y=IMR))+
geom_point()+
ggtitle(label = "Relationship between Total Fertility and Infant Mortality", subtitle = "2008 Estimates")+
xlab(label = "TFR")+
ylab(label="IMR")
ggplot(data=prb,mapping= aes(x=TFR, y=IMR, color=Continent))+
geom_point()+
ggtitle(label = "Relationship between Total Fertility and Infant Mortality", subtitle = "2008 Estimates")+
xlab(label = "TFR")+
ylab(label="IMR")
#shape varies by continent
ggplot(data=prb,mapping= aes(x=TFR, y=IMR, shape=Continent))+
geom_point()+
ggtitle(label = "Relationship between Total Fertility and Infant Mortality", subtitle = "2008 Estimates")+
xlab(label = "TFR")+
ylab(label="IMR")
ggplot(data=prb,mapping= aes(x=TFR, y=IMR, color=Continent))+
geom_point()+
facet_wrap(~Continent)+
ggtitle(label = "Relationship between Total Fertility and Infant Mortality", subtitle = "2008 Estimates")+
xlab(label = "TFR")+
ylab(label="IMR")
ggplot(data=prb,mapping= aes(x=TFR, y=IMR))+
geom_point()+
geom_smooth( method = "lm")+
ggtitle(label = "Relationship between Total Fertility and Infant Mortality", subtitle = "2008 Estimates-linear fit")+
xlab(label = "TFR")+
ylab(label="IMR")
ggplot(data=prb)+
geom_point(mapping= aes(x=TFR, y=IMR))+
geom_smooth(mapping= aes(x=TFR, y=IMR) , method = "loess")+
ggtitle(label = "Relationship between Total Fertility and Infant Mortality", subtitle = "2008 Estimates")+
xlab(label = "TFR")+
ylab(label="IMR")
ggplot(data=prb,mapping= aes(x=TFR, y=PercPopLT15))+
geom_point()+
geom_smooth( method = "lm")+
ggtitle(label = "Relationship between Total Fertility and Percent under age 15", subtitle = "2008 Estimates-linear fit")+
xlab(label = "Percent under age 15")+
ylab(label="IMR")
ggplot(data=prb, mapping= aes(x=TFR, y=PercPopLT15))+
geom_point()+
geom_smooth( method = "loess")+
ggtitle(label = "Relationship between Total Fertility and Percent under age 15", subtitle = "2008 Estimates- loess fit")+
xlab(label = "Percent under age 15")+
ylab(label="IMR")
?lm
?t.test
??"linear model"
RSiteSearch("heteroskedasticity")
getwd()
setwd("C:/Users/ozd504/Google Drive/classes/dem7273/class_17/code")
install.packages("car")
library(car)
library(dplyr)
library(Hmisc)
x<-3
x
x< -3
x<-seq(0:20)
x
x[5]
x[5:10]
x== 5
x>5 5
x>5
x<-c("a", "b", "c")
x
is.numeric(x)
is.character(x)
View(prb)
table(is.na(prb$PercPop1549HIVAIDS2001))
x
x<-c(1,2,3,4,5 ,NA)
x
x<-ifelse(is.na(x)==T, mean(x, na.rm=T), x)
x
View(mydat)
View(prb)
View(prb)
table(prb$Continent, prb$Region)
table(prb$Continent, is.na(prb$PercPop1549HIVAIDS2001))
paste("Corey", "Sparks")
source("https://raw.githubusercontent.com/coreysparks/Rcode/master/install_first_short.R")
install.packages(c("devtools", "tidyverse", "bootstrap", "lmtest", "car", "Hmisc", "sandwich", "multcomp", "knitr", "lattice", "survey", "pscl", "ctv", "ggplot2", "acs", "ggmap", "dplyr", "sjPlot", "survey"), dependencies = T)
knitr::opts_chunk$set(echo = TRUE)
library(haven)
library(car)
library(stargazer)
library(survey)
library(questionr)
library(dplyr)
library(tidyverse)
library(gssr)
library(survey)
library(readr)
library(tableone, quietly = T)
library(ggplot2, quietly = T)
library(caret, quietly = T)
library(tableone)
gss2018<- read_sav("~/Downloads/OneDrive_1_4-7-2021/GSS7218_R3.sav")
nams<-names(gss2018)
head(nams, n=10)
#we see some names are lower case, some are upper and some have a little _ in the first position. This is a nightmare.
newnames<-tolower(gsub(pattern = "_",replacement =  "",x =  nams))
names(gss2018)<-newnames
gss2018<- gss2018 %>%
select(wtssnr,condom,partopen,hivkiss,aidscndm,educ,vstrat,rincome,sex,age,race,) %>%
mutate( sex=ifelse(sex==1,"Female",
ifelse(sex==0, "Male", NA
))) %>%
mutate(rincome = car::Recode(rincome,recodes="1:4='< $5000'; 5:10='$5000 - $19,999'; 11='$20000 - $24999'; 12='$25000 and more';else=NA",as.factor=T ),
educ = car::Recode(educ,recodes="0='Noschooling'; 1:4='Prim'; 5:10='somehs'; 11:12='hsgrad'; 13:14='somecol'; 15:20='colgrad'; 97:99=NA", as.factor=T ),
race = car::Recode(race,recodes="'1'='NH-White';'2'='NH-Black';'3'='Other';else=NA",as.factor=T ),
age = car::Recode(age,recodes="1='18-20';2='21-24';3='25-29';4='30-35';else=NA"),
condom = car::Recode(condom,recodes="1='Used last time'; 2='Not used'; else=NA", as.factor=T), partopen = car::Recode(partopen,recodes="0='No partner'; 1='1 partner'; 2='2 partners'; 3:100='More than 2 partners';else=NA",as.factor=T ),
hivkiss=ifelse(hivkiss==1, "True",
ifelse(hivkiss==2, "False", NA )),
aidscndm=ifelse(aidscndm==1, "Yes",
ifelse(aidscndm==2, "No",NA)))
gss2018<- zap_lables(gss2018)
gss2018<- zap_labels(gss2018)
gss2018<- gss2018 %>%
select(wtssnr,condom,partopen,hivkiss,aidscndm,educ,vstrat,rincome,sex,age,race,) %>%
mutate( sex=ifelse(sex==1,"Female",
ifelse(sex==0, "Male", NA
))) %>%
mutate(rincome = car::Recode(rincome,recodes="1:4='< $5000'; 5:10='$5000 - $19,999'; 11='$20000 - $24999'; 12='$25000 and more';else=NA",as.factor=T ),
educ = car::Recode(educ,recodes="0='Noschooling'; 1:4='Prim'; 5:10='somehs'; 11:12='hsgrad'; 13:14='somecol'; 15:20='colgrad'; 97:99=NA", as.factor=T ),
race = car::Recode(race,recodes="'1'='NH-White';'2'='NH-Black';'3'='Other';else=NA",as.factor=T ),
age = car::Recode(age,recodes="1='18-20';2='21-24';3='25-29';4='30-35';else=NA"),
condom = car::Recode(condom,recodes="1='Used last time'; 2='Not used'; else=NA", as.factor=T), partopen = car::Recode(partopen,recodes="0='No partner'; 1='1 partner'; 2='2 partners'; 3:100='More than 2 partners';else=NA",as.factor=T ),
hivkiss=ifelse(hivkiss==1, "True",
ifelse(hivkiss==2, "False", NA )),
aidscndm=ifelse(aidscndm==1, "Yes",
ifelse(aidscndm==2, "No",NA)))
library(sf)
library(censusapi)
Sys.setenv(CENSUS_KEY="f67be5a86e696eebf0c84a5a20d85f2c04f7e9ef")
![IPUMS - Waiting](C:/Users/ozd504/OneDrive - University of Texas at San Antonio/ipums1.PNG)
knitr::opts_chunk$set(echo = TRUE)
library(demography)
library(ggplot2)
library(tidyverse)
library(StMoMo)
library(fds)
usdat<-hmd.mx(country = "USA", username = "corey.sparks@utsa.edu", password = "1429845433", label="USA")
AUSStMoMO <- StMoMoData(usdat,series = "male")
summary(AUSStMoMO)
D<-as.numeric(AUSStMoMO$Dxt)
E<-as.numeric(AUSStMoMO$Ext)
nage<-dim(AUSStMoMO$Dxt)[1]
nyear<-dim(AUSStMoMO$Dxt)[2]
age<-rep(AUSStMoMO$ages,nyear )
years<-rep(AUSStMoMO$years, nage)
dat<-data.frame(D=round(D,0), E=E, age=age, years=years)
dat$lr<-log(dat$D/dat$E)
library(mgcv)
fit1<-gam(lr~s(age)+years, family = gaussian,data= dat)
summary(fit1)
new<-expand.grid(age=seq(50,90,10), years=seq(2018, 2050,1))
new$est<-predict(fit1, newdata=new)
plot(y=new$est[new$age==60], x=new$years[new$age==60])
lines(y=new$est[new$age==70], x=new$years[new$age==70], col=2)
lines(y=new$est[new$age==80], x=new$years[new$age==80], col=3)
library(dplyr)
library(ggplot2)
new%>%
ggplot(aes(x=age, y=est, group=years, color=years))+geom_line()
Years <- 1933:2017
Age <- 1:111
d <- AUSStMoMO$Dxt
e <- AUSStMoMO$Ext
m <- d/e
m <- log(m)
n.x = nrow(m) # 111
n.y = ncol(m) # 85
m_mat <- matrix(m, nrow = n.x, ncol = n.y) # 111 X 85
plot(x=Age, y=m_mat[,1], type = "l") #mortality of all ages in year 1933
# Mean log mortality for all age groups under consideration (Age)
a_age <- rowMeans(m_mat)
lines(x = Age, y = a_age, col = 2)#average mortality for all age groups
head(m_mat)
test<-svd(m_mat)
test
?prcomp
test<-prcomp(m_mat)
test
plot(test$rotation[, 1])
plot(test$rotation[1, ])
plot(test$rotation[, 1])
plot(test$rotation[, 2])
plot(test$rotation[, 1], type="l")
plot(test$rotation[, 2], type="l")
plot(test$rotation[, 3], type="l")
plot(test$rotation[, 4], type="l")
plot(test$rotation[, 5], type="l")
plot(Test)
plot(test)
plot(test$rotation[, 1], type="l")
plot(test$rotation[, 2], type="l")
plot(test$rotation[, 3], type="l")
# plotting mortality for Age = 65 as a trial run to see if code is working
# as exxpected
plot(x = Years, y = m_mat[65,], pch = 18, xlab = "Years", ylab = "log m", col = 2) #working!!!
Years <- 1933:2017
Age <- 1:111
d <- AUSStMoMO$Dxt
e <- AUSStMoMO$Ext
m <- d/e
m <- log(m)
n.x = nrow(m) # 111
n.y = ncol(m) # 85
m_mat <- matrix(m, nrow = n.x, ncol = n.y) # 111 X 85
plot(x=Age, y=m_mat[,1], type = "l") #mortality of all ages in year 1933
# Mean log mortality for all age groups under consideration (Age)
a_age <- rowMeans(m_mat)
lines(x = Age, y = a_age, col = 2)#average mortality for all age groups
# plotting mortality for Age = 65 as a trial run to see if code is working
# as exxpected
plot(x = Years, y = m_mat[65,], pch = 18, xlab = "Years", ylab = "log m", col = 2) #working!!!
# Average mortality across each year
a_year <- colMeans(m_mat)
#We need to estimate parameters ax, bx and kt of the Lee-Carter model
# ax is the avg of log mortality rates over time. ie sum(log m)/n.y
# avg of log rates -> a_hat <- rowSums(m)/94
# Subtracting a from all years in m_mat
m_hat <- matrix(1, nrow = n.y, ncol = n.x) #Dummy matrix with dim 85 X 111
m_hat <- t(m_mat)
m_mat <- t(m_mat)
for(i in 1:n.y) m_hat[,i] <- m_mat[,i] - a_age[i]
m_hat <- m_hat[,1:85]
age_mod <- 1:85
#SVD
svd_ <- svd(m_hat,1,1)
v <- svd_$v
u <- svd_$u
d <- svd_$d
b <- v/sum(v)
k <- u * sum(v) * d[1]
fit_1 = a_age[age_mod] + (b * k[1])
plot(x = age_mod, y = m_mat[1,age_mod], pch = 19, xlab = "Age", ylab = "m")
lines(x = age_mod, y = fit_1, col = 2, lwd = 2, xlab = "Age", ylab = "m")
sums<-sum(test$rotation[, 1:3])
plot(sums, type="l")
sums
sums<-apply(test$rotation[, 1:3], 1, sum)
plot(sums, type="l")
