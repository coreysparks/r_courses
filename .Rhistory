pums_tx_ca.SERIALNO, pums_tx_ca.ST_LABEL,
AVG(pums_tx_ca_hh.VALP) AS mean_home_value
FROM pums_tx_ca
LEFT JOIN pums_tx_ca_hh ON pums_tx_ca.SERIALNO = pums_tx_ca_hh.SERIALNO
WHERE pums_tx_ca.AGEP >=25 AND pums_tx_ca.SCHL = 24 AND pums_tx_ca.WAGP > 0 AND pums_tx_ca_hh.VALP>0
GROUP BY pums_tx_ca.ST_LABEL
LIMIT 10;
"
mydata<- dbGetQuery(conn = con,
statement = query)
mydata
query<-"
SELECT
pums_tx_ca.SERIALNO, pums_tx_ca.AGEP, pums_tx_ca.SCHL, pums_tx_ca.ST_LABEL, pums_tx_ca.SEX, pums_tx_ca.WAGP ,
pums_tx_ca_hh.SERIALNO, pums_tx_ca_hh.VALP
FROM pums_tx_ca
LEFT JOIN pums_tx_ca_hh ON pums_tx_ca.SERIALNO = pums_tx_ca_hh.SERIALNO
WHERE pums_tx_ca.AGEP >=25 AND pums_tx_ca.SCHL = 24 AND pums_tx_ca.WAGP > 0 AND pums_tx_ca_hh.VALP>0
"
mydata<- dbGetQuery(conn = con,
statement = query)
head(mydata)
dim(mydata)
library(tidyverse)
library(DBI)
library(RSQLite)
con <-dbConnect(drv = SQLite(),
dbname = "data/PUMS_data")
con
dbListTables(con)
library(tidyverse)
library(DBI)
library(RSQLite)
con <-dbConnect(drv = SQLite(),
dbname = "data/PUMS_data")
con
dbListTables(con)
myquery<- 'select AGEP, SEX, ST_LABEL from pums_tx_ca limit 10;'
mydata <- dbGetQuery(conn = con, statement = myquery)
mydata
mydata<- dbGetQuery(conn = con,
statement = 'select AGEP, SEX, ST_LABEL
from pums_tx_ca limit 10;')
mydata
query<-"
SELECT  AGEP, SEX, ST, WAGP
FROM pums_tx_ca limit 10;
"
mydata<- dbGetQuery(conn = con,
statement = query)
mydata
query<-"
SELECT  AGEP, SEX, ST, WAGP, SCHL
FROM pums_tx_ca
WHERE AGEP >=25 AND SCHL = 24 AND WAGP > 0
limit 10;
"
mydata<- dbGetQuery(conn = con,
statement = query)
mydata
query<-"
SELECT ST_LABEL, AVG(WAGP)
FROM pums_tx_ca
WHERE AGEP >=25 AND SCHL = 24 AND WAGP > 0
GROUP BY ST
"
mydata<- dbGetQuery(conn = con,
statement = query)
mydata
query<-"
SELECT ST_LABEL, SEX_LABEL, AVG(WAGP)
FROM pums_tx_ca
WHERE AGEP >=25 AND SCHL = 24 AND WAGP > 0
GROUP BY ST, SEX
"
mydata<- dbGetQuery(conn = con,
statement = query)
mydata
query<-"
SELECT
pums_tx_ca.SERIALNO, pums_tx_ca.AGEP, pums_tx_ca.SCHL, pums_tx_ca.ST, pums_tx_ca.SEX, pums_tx_ca.WAGP , pums_tx_ca_hh.TENURE
pums_tx_ca_hh.SERIALNO, pums_tx_ca_hh.VALP
FROM pums_tx_ca
LEFT JOIN pums_tx_ca_hh ON pums_tx_ca.SERIALNO = pums_tx_ca_hh.SERIALNO
WHERE pums_tx_ca.AGEP >=25 AND pums_tx_ca.SCHL = 24 AND pums_tx_ca.WAGP > 0 AND pums_tx_ca_hh.VALP>0
LIMIT 10;
"
mydata<- dbGetQuery(conn = con,
statement = query)
query<-"
SELECT
pums_tx_ca.SERIALNO, pums_tx_ca.AGEP, pums_tx_ca.SCHL, pums_tx_ca.ST, pums_tx_ca.SEX, pums_tx_ca.WAGP , pums_tx_ca_hh.TENURE,
pums_tx_ca_hh.SERIALNO, pums_tx_ca_hh.VALP
FROM pums_tx_ca
LEFT JOIN pums_tx_ca_hh ON pums_tx_ca.SERIALNO = pums_tx_ca_hh.SERIALNO
WHERE pums_tx_ca.AGEP >=25 AND pums_tx_ca.SCHL = 24 AND pums_tx_ca.WAGP > 0 AND pums_tx_ca_hh.VALP>0
LIMIT 10;
"
mydata<- dbGetQuery(conn = con,
statement = query)
pums_tx_ca.SERIALNO, pums_tx_ca.AGEP, pums_tx_ca.SCHL, pums_tx_ca.ST, pums_tx_ca.SEX, pums_tx_ca.WAGP , pums_tx_ca_hh.TEN,
query<-"
SELECT
pums_tx_ca.SERIALNO, pums_tx_ca.AGEP, pums_tx_ca.SCHL, pums_tx_ca.ST, pums_tx_ca.SEX, pums_tx_ca.WAGP , pums_tx_ca_hh.TEN,
pums_tx_ca_hh.SERIALNO, pums_tx_ca_hh.VALP
FROM pums_tx_ca
LEFT JOIN pums_tx_ca_hh ON pums_tx_ca.SERIALNO = pums_tx_ca_hh.SERIALNO
WHERE pums_tx_ca.AGEP >=25 AND pums_tx_ca.SCHL = 24 AND pums_tx_ca.WAGP > 0 AND pums_tx_ca_hh.VALP>0
LIMIT 10;
"
mydata<- dbGetQuery(conn = con,
statement = query)
mydata
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus)
library(dplyr)
library(sf)
library(ggplot2)
library(censusapi)
library(tidycensus, quietly = T)
library(tidyverse, quietly = T)
library(sf, quietly = T)
v19_Profile <- load_variables(year = 2019 ,
dataset = "acs5/profile",
cache = TRUE) #data profile tables
#Open the data for examination
View(v19_Profile)
v15_Profile[grep(x = v19_Profile$label, "Median household"),
c("name", "label")]
v19_Profile[grep(x = v19_Profile$label, "Median household"),
c("name", "label")]
v19_detailed <- load_variables(year = 2019 ,
dataset = "acs5",
cache = TRUE) # detail tables
v19_detailed[grep(x = v19_detailed$label, "Median household"),
c("name", "label")]
v19_detailed <- load_variables(year = 2019 ,
dataset = "acs5",
cache = TRUE) # detail tables
?load_variables
v19_detailed <- load_variables(year = 2019 ,
dataset = "acs5")# detail tables
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus, quietly = T)
library(tidyverse, quietly = T)
library(sf, quietly = T)
?load_variables
v19_Profile <- load_variables(year = 2019 ,
dataset = "acs5/profile",
cache = TRUE) #data profile tables
v19_Profile[grep(x = v19_Profile$label, "Median household"),
c("name", "label")]
v19_detailed <- load_variables(year = 2019 ,
dataset = "acs5")# detail tables
v19_detailed[grep(x = v19_detailed$label, "Median household"),
c("name", "label")]
head(v19_detailed)
View(v19_detailed[grep(x = v19_detailed$label, "Median household"),
c("name", "label")])
knitr::kable(v19_detailed[grep(x = v19_detailed$label, "Median household"),
c("name", "label")], format = "html")
sa_acs<-get_acs(geography = "tract", #level of geography requested
state="TX", #can use state FIPS codes as well e.g. 48
county = "029", #County FIPS codes are safer
year = 2019,
variables=c( "DP03_0062E") ,
geometry = T, #merge estimates to Census geographies
output = "wide")
head(sa_acs)
sa_acs<-sa_acs%>%
mutate( medhhinc=DP03_0062E) %>%
filter(complete.cases(medhhinc))
#take a peek at the first few lines of data
head(sa_acs)
sa_acs<-sa_acs%>%
mutate( medhhinc=DP03_0062E,
medhhinc_moe = DP03_0062M) %>%
filter(complete.cases(medhhinc)) %>%
select(GEOID, NAME, medhhinc, medhhinc_moe )
#take a peek at the first few lines of data
head(sa_acs)
sa_acs<-sa_acs%>%
# mutate( medhhinc=DP03_0062E,
#         medhhinc_moe = DP03_0062M) %>%
filter(complete.cases(medhhinc)) %>%
select(GEOID, NAME, medhhinc=DP03_0062E, medhhinc_moe= DP03_0062M )
sa_acs<-get_acs(geography = "tract", #level of geography requested
state="TX", #can use state FIPS codes as well e.g. 48
county = "029", #County FIPS codes are safer
year = 2019,
variables=c( "DP03_0062E") ,
geometry = T, #merge estimates to Census geographies
output = "wide")
head(sa_acs)
sa_acs<-sa_acs%>%
# mutate( medhhinc=DP03_0062E,
#         medhhinc_moe = DP03_0062M) %>%
filter(complete.cases(medhhinc)) %>%
select(GEOID, NAME, medhhinc=DP03_0062E, medhhinc_moe= DP03_0062M )
sa_acs<-sa_acs%>%
# mutate( medhhinc=DP03_0062E,
#         medhhinc_moe = DP03_0062M) %>%
filter(complete.cases(medhhinc)) %>%
select(GEOID, NAME, DP03_0062E=medhhinc,DP03_0062M = medhhinc_moe)
sa_acs<-sa_acs%>%
# mutate( medhhinc=DP03_0062E,
#         medhhinc_moe = DP03_0062M) %>%
select(GEOID, NAME, medhhinc=DP03_0062E, medhhinc_moe= DP03_0062M )%>%
filter(complete.cases(medhhinc))
#take a peek at the first few lines of data
head(sa_acs)
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
title="% in Poverty",
palette="Blues",
style="quantile", n=5 )+
tm_format("World",
title="San Antonio Median Household Income Estimates\n Quantile Breaks, 2019",
legend.outside=T)+
tm_scale_bar()+
tm_compass()
library(tmap) #need to install on your system
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
title="% in Poverty",
palette="Blues",
style="quantile", n=5 )+
tm_format("World",
title="San Antonio Median Household Income Estimates\n Quantile Breaks, 2019",
legend.outside=T)+
tm_scale_bar()+
tm_compass()
tmap_mode("view")
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
title="Median Income",
palette="Blues",
style="quantile", n=5 )+
tm_format("World",
title="San Antonio Median Household Income Estimates\n Quantile Breaks, 2019",
legend.outside=T)+
tm_scale_bar()+
tm_compass()
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
title="Median Income",
palette="Blues",
style="quantile", n=5 )
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
alpha = .75,
title="Median Income",
palette="Blues",
style="quantile", n=5 )
library(tmap) #need to install on your system
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
title="Median Income",
palette="Blues",
style="quantile", n=5 )+
tm_format("World",
title="San Antonio Median Household Income Estimates\n Quantile Breaks, 2019",
legend.outside=T)+
tm_scale_bar()+
tm_compass()
tmap_save(filename = "SA_Income.png")
?pums_variables
all_pums_vars <- pums_variables(survey = "acs5",
year = 2019,
level = "person")
person_2019 <- pums_variables%>%
filter(year = 2019, level = "person")
head(pums_variables)
person_2019 <- pums_variables%>%
filter(year = 2019, level == "person")
person_2019 <- pums_variables%>%
filter(year == 2019, level == "person")
knitr::kable(head(person_2019, n = 20), format = "html")
person_2019 <- pums_variables%>%
filter(year == 2019,
survey == "acs5",
level == "person")
knitr::kable(head(person_2019, n = 20), format = "html")
pums <- get_pums(year = 2019,
state = c("48"),  #list of states, FIPS codes also work
survey = "acs5",
variables =c("ST", "PWGTP", "AGEP", "SCHL", "SEX", "WAGP", "HISP", "RAC1P", "FOD1P"),
recode = T,
variables_filter = list(AGEP = 18:65) #optional filter for Age in 18:65
)
pums_tx <- get_pums(year = 2019,
state = c("TX"),  #list of states, FIPS codes also work
survey = "acs5", # survey you are wanting
variables =c("ST", "PWGTP", "AGEP", "SCHL", "SEX", "WAGP", "HISP", "RAC1P", "FOD1P"),
recode = T, #adds labels for variables, optional
variables_filter = list(AGEP = 18:65) #optional filter for Age in 18:65, optional
)
pums_tx <- get_pums(year = 2019,
state = c("TX"),  #list of states, FIPS codes also work
survey = "acs5", # survey you are wanting
variables =c("ST","PUMA", "PWGTP", "AGEP", "SCHL", "SEX", "WAGP", "HISP", "RAC1P", "FOD1P"),
recode = T, #adds labels for variables, optional
variables_filter = list(AGEP = 18:65) #optional filter for Age in 18:65, optional
)
head(pums_tx)
head(pums_tx)
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus, quietly = T)
library(tidyverse, quietly = T)
library(sf, quietly = T)
?load_variables
v19_Profile <- load_variables(year = 2019 ,
dataset = "acs5/profile",
cache = TRUE) #data profile tables
View(v19_Profile)
v19_Profile[grep(x = v19_Profile$label, "Median household"),
c("name", "label")]
v19_detailed <- load_variables(year = 2019 ,
dataset = "acs5")# detail tables
knitr::kable(v19_detailed[grep(x = v19_detailed$label, "Median household"),
c("name", "label")], format = "html")
sa_acs<-get_acs(geography = "tract", #level of geography requested
state="TX", #can use state FIPS codes as well e.g. 48
county = "029", #County FIPS codes are safer
year = 2019,
variables=c( "DP03_0062E") ,
geometry = T, #merge estimates to Census geographies
output = "wide")
head(sa_acs)
sa_acs<-sa_acs%>%
# mutate( medhhinc=DP03_0062E,
#         medhhinc_moe = DP03_0062M) %>%
select(GEOID, NAME, medhhinc=DP03_0062E, medhhinc_moe= DP03_0062M )%>%
filter(complete.cases(medhhinc))
#take a peek at the first few lines of data
head(sa_acs)
tmap_mode("plot")
library(tmap, quietly = T)
tmap_mode("plot")
library(tmap) #need to install on your system
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
title="Median Income",
palette="Blues",
style="quantile", n=5 )+
tm_format("World",
title="San Antonio Median Household Income Estimates\n Quantile Breaks, 2019",
legend.outside=T)+
tm_scale_bar()+
tm_compass()
tmap_save(filename = "SA_Income.png")
#change the directory for your computer
sf::st_write(sa_acs,
dsn="sa_tr_dp03.gpkg",
layer="sa_tr_19",
driver="GPKG") ## Save as geopackage format
pums_tx <- get_pums(year = 2019,
state = c("TX"),  #list of states, FIPS codes also work
survey = "acs5", # survey you are wanting
variables =c("ST","PUMA", "PWGTP", "AGEP", "SCHL", "SEX", "WAGP", "HISP", "RAC1P", "FOD1P"),
recode = T, #adds labels for variables, optional
variables_filter = list(AGEP = 18:65) #optional filter for Age in 18:65, optional
)
head(pums_tx)
knitr::kable(head(person_2019, n = 20),align = 'c' format = "html")
knitr::kable(head(person_2019, n = 20),align = 'c', format = "html")
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus, quietly = T)
library(tidyverse, quietly = T)
library(sf, quietly = T)
library(tmap, quietly = T)
v19_Profile <- load_variables(year = 2019 ,
dataset = "acs5/profile",
cache = TRUE) #data profile tables
v19_Profile[grep(x = v19_Profile$label, "Median household"),
c("name", "label")]
v19_detailed <- load_variables(year = 2019 ,
dataset = "acs5")# detail tables
knitr::kable(v19_detailed[grep(x = v19_detailed$label, "Median household"),
c("name", "label")], format = "html")
sa_acs<-get_acs(geography = "tract", #level of geography requested
state="TX", #can use state FIPS codes as well e.g. 48
county = "029", #County FIPS codes are safer
year = 2019,
variables=c( "DP03_0062E") ,
geometry = T, #merge estimates to Census geographies
output = "wide")
head(sa_acs)
sa_acs<-sa_acs%>%
# mutate( medhhinc=DP03_0062E,
#         medhhinc_moe = DP03_0062M) %>%
select(GEOID, NAME, medhhinc=DP03_0062E, medhhinc_moe= DP03_0062M )%>%
filter(complete.cases(medhhinc))
#take a peek at the first few lines of data
head(sa_acs)
tmap_mode("plot")
library(tmap) #need to install on your system
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
title="Median Income",
palette="Blues",
style="quantile", n=5 )+
tm_format("World",
title="San Antonio Median Household Income Estimates\n Quantile Breaks, 2019",
legend.outside=T)+
tm_scale_bar()+
tm_compass()
tmap_save(filename = "SA_Income.png")
tmap_mode("view")
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
alpha = .75,
title="Median Income",
palette="Blues",
style="quantile", n=5 )
person_2019 <- pums_variables%>%
filter(year == 2019,
survey == "acs5",
level == "person")
knitr::kable(head(person_2019, n = 20),
align = 'c',
format = "html")
pums_tx <- get_pums(year = 2019,
state = c("TX"),  #list of states, FIPS codes also work
survey = "acs5", # survey you are wanting
variables =c("ST","PUMA", "PWGTP", "AGEP", "SCHL", "SEX", "WAGP", "HISP", "RAC1P", "FOD1P"),
recode = T, #adds labels for variables, optional
variables_filter = list(AGEP = 18:65) #optional filter for Age in 18:65, optional
)
head(pums_tx)
readr::write_csv(pums_tx,
file  = "pums_tx_2019.csv")
View(v19_Profile)
head(sa_acs)
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus, quietly = T)
library(tidyverse, quietly = T)
library(sf, quietly = T)
library(tmap, quietly = T)
v19_Profile <- load_variables(year = 2019 ,
dataset = "acs5/profile",
cache = TRUE) #data profile tables
v19_Profile[grep(x = v19_Profile$label, "Median household"),
c("name", "label")]
v19_detailed <- load_variables(year = 2019 ,
dataset = "acs5")# detail tables
knitr::kable(v19_detailed[grep(x = v19_detailed$label, "Median household"),
c("name", "label")], format = "html")
sa_acs<-get_acs(geography = "tract", #level of geography requested
state="TX", #can use state FIPS codes as well e.g. 48
county = "029", #County FIPS codes are safer
year = 2019,
variables=c( "DP03_0062E") ,
geometry = T, #merge estimates to Census geographies
output = "wide")
head(sa_acs)
sa_acs<-sa_acs%>%
# mutate( medhhinc=DP03_0062E,
#         medhhinc_moe = DP03_0062M) %>%
select(GEOID, NAME, medhhinc=DP03_0062E, medhhinc_moe= DP03_0062M )%>%
filter(complete.cases(medhhinc))
#take a peek at the first few lines of data
head(sa_acs)
tmap_mode("plot")
library(tmap) #need to install on your system
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
title="Median Income",
palette="Blues",
style="quantile", n=5 )+
tm_format("World",
title="San Antonio Median Household Income Estimates\n Quantile Breaks, 2019",
legend.outside=T)+
tm_scale_bar()+
tm_compass()
tmap_save(filename = "SA_Income.png")
tmap_mode("view")
sa_acs%>%
tm_shape()+
tm_polygons("medhhinc",
alpha = .75,
title="Median Income",
palette="Blues",
style="quantile", n=5 )
person_2019 <- pums_variables%>%
filter(year == 2019,
survey == "acs5",
level == "person")
knitr::kable(head(person_2019, n = 20),
align = 'c',
format = "html")
pums_tx <- get_pums(year = 2019,
state = c("TX"),  #list of states, FIPS codes also work
survey = "acs5", # survey you are wanting
variables =c("ST","PUMA", "PWGTP", "AGEP", "SCHL", "SEX", "WAGP", "HISP", "RAC1P", "FOD1P"),
recode = T, #adds labels for variables, optional
variables_filter = list(AGEP = 18:65) #optional filter for Age in 18:65, optional
)
head(pums_tx)
readr::write_csv(pums_tx,
file  = "pums_tx_2019.csv")
